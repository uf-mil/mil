<launch>
    <arg name="gps" default="True" />
    <arg name="simulation" default="False" />

    <include file="$(find navigator_launch)/launch/gnc/thruster_mapper.launch"/>

    <include unless="$(arg simulation)" file="$(find navigator_launch)/launch/gnc/tf.launch"/>
    <include unless="$(arg simulation)" file="$(find navigator_launch)/launch/gnc/controller.launch" />

    <node name="wrench_arbiter" ns="/wrench" pkg="topic_tools" type="mux"
          args="cmd cmd autonomous rc emergency keyboard" >
        <remap from="mux" to="/wrench" />
    </node>

    <node name="trajectory_arbiter" ns="/trajectory" pkg="topic_tools" type="mux"
          args="cmd lqrrt constant" >
        <remap from="mux" to="/trajectory" />
    </node>

    <node pkg="navigator_joystick_control" type="navigator_joystick.py" name="joystick_wrench" output="screen">
        <param name="force_scale" value="600" type="double"/>
        <param name="torque_scale" value="500" type="double"/>
    </node>

    <node pkg="navigator_emergency_controller" type="navigator_emergency.py" name="emergency_wrench" output="screen">
        <param name="force_scale" value="600" type="double"/>
        <param name="torque_scale" value="500" type="double"/>
    </node>

    <node pkg="navigator_keyboard_control" type="navigator_keyboard_server.py" name="keyboard_server" output="screen"/>

    <node pkg="navigator_tools" type="boat_info.py" name="boat_info_markers" />

    <include file="$(find navigator_launch)/launch/perception/pcodar.launch">
      <arg name="simulation" value="$(arg simulation)" />
    </include>

    <!-- Run Path Planner -->
    <include file="$(find navigator_launch)/launch/gnc/path_planner.launch" />

    <!-- Core utilities: bounds, coordinate conversion -->
    <node name="coordinate_converter" pkg="navigator_tools" type="coordinate_conversion_server.py"/>
    <include file="$(find navigator_launch)/launch/gnc/bounds.launch">
      <arg name="simulation" value="$(arg simulation)" />
    </include>
</launch>
