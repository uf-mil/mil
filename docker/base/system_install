#!/bin/bash
set -euo pipefail

DOCKER=${DOCKER:-"false"}

mil_system_install()
{
  sudo apt install -y $@
}

# Update apt
sudo apt update

# System dependencies
mil_system_install apt-utils
mil_system_install --no-install-recommends \
  ca-certificates \
  tzdata \
  dirmngr \
  gnupg2 \
  lsb-release \
  python-vcstools \
  mercurial \
  ruby \
  wget \
  expect

# ROS apt source
sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
# Install Gazebo apt source
sudo sh -c 'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable $(lsb_release -sc) main" > /etc/apt/sources.list.d/gazebo-stable.list' \

# Pull ROS apt key
sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
# Pull gazebo apt key
sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key D2486D2DD83DB69272AFE98867170598AF249743

# Pull Gazebo apt key
wget http://packages.osrfoundation.org/gazebo.key -O - | sudo apt-key add -
# Update apt again and install ros
sudo apt update
mil_system_install ros-melodic-desktop-full
# Install additional dependencies not bundled by default with ros
# Please put each on a new line for readability
mil_system_install \
  ros-melodic-serial \
  ros-melodic-tf2-sensor-msgs \
  ros-melodic-geographic-msgs \
  ros-melodic-velodyne \
  ros-melodic-usb-cam \
  ros-melodic-joy \
  ros-melodic-spacenav-node \
  ros-melodic-velodyne-simulator \
  ros-melodic-hector-gazebo-plugins \
  ros-melodic-joy \
  ros-melodic-joy-teleop \
  ros-melodic-key-teleop \
  ros-melodic-robot-localization \
  ros-melodic-teleop-tools \
  ros-melodic-teleop-twist-keyboard \
  python-pip \
  clang-format-3.9
sudo pip install \
  tqdm \
  scipy \
  sklearn \
  pandas

# Documentation dependencies
mil_system_install \
  python3-pip \
  xvfb \
  xdg-utils \
  libappindicator3-1 \
  libsecret-1-0


if [ $DOCKER == "true" ]; then
  DOC_REQUIRMENTS="/tmp/doc_requirements.txt"
elif [ $DOCKER == "false" ]; then
  MIL_REPO="$(realpath $(dirname $BASH_SOURCE)/..)"
  DOC_REQUIRMENTS="$MIL_REPO/docker/base/doc_requirements.txt"
fi

sudo pip3 install -q -r $DOC_REQUIRMENTS

#  install drawio
sudo wget -O /tmp/drawio.deb https://github.com/jgraph/drawio-desktop/releases/download/v12.3.2/draw.io-amd64-12.3.2.deb
sudo dpkg -i /tmp/drawio.deb
sudo apt -y -f install /tmp/drawio.deb
sudo rm /tmp/drawio.deb

PATH=$PATH:/opt/drawio/

# Initialize rosdep
sudo pip install -U rosdep
sudo rosdep init
