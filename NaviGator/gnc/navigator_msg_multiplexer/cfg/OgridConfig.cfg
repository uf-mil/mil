#!/usr/bin/env python3
PACKAGE = "navigator_msg_multiplexer"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add(
    "topics",
    str_t,
    0,
    "A comma delimited list of ogrid topics to listen to.",
    "ogrid, mission_ogrid, draw_ogrid",
)
gen.add(
    "replace_topics",
    str_t,
    0,
    "A comma delimited list of ogrid topics to listen to, when this topic is publishing, the ogrid will be replaced in that area.",
    "docking_ogrid",
)

gen.add("width", int_t, 0, "Width of output grid.", 500, 0, 2000)
gen.add("height", int_t, 0, "Height of output grid.", 500, 0, 2000)
gen.add(
    "resolution", double_t, 0, "Resolution of output grid (not implemented)", 0.3, 0, 3
)
gen.add(
    "ogrid_min_value",
    int_t,
    0,
    "Minimum value to allow on the ogrid (can produce weird results)",
    -1,
    -100,
    0,
)
gen.add(
    "ogrid_timeout", double_t, 0, "How long to persist old occupancy grids", 2, 0, 30
)

gen.add("plow", bool_t, 0, "Whether or not to remove the ogrid around the boat.", True)
gen.add(
    "plow_factor", double_t, 0, "Amount in meters to expand the boat plow.", 0.5, 0, 2
)

gen.add(
    "set_origin",
    bool_t,
    0,
    "Let the user specify the origin of the ogrid rather than just centering it.",
    False,
)
gen.add(
    "origin_x",
    double_t,
    0,
    "The enu position of the x origin in meters.",
    0,
    -1000,
    1000,
)
gen.add(
    "origin_y",
    double_t,
    0,
    "The enu position of the y origin in meters.",
    0,
    -1000,
    1000,
)

gen.add("draw_bounds", bool_t, 0, "Should we draw the boundaries on the grid?", True)

exit(gen.generate(PACKAGE, "navigator_msg_multiplexer", "Ogrid"))
