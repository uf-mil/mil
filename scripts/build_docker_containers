#!/bin/bash
set -euo pipefail

# Usage
if [ $# -gt 0 ]
then
    echo "Usage: $0"
    exit 1
fi

if [[ $EUID -ne 0 ]] && [[ $(id -Gn "$USER" | grep -c "docker") == 0 ]] ; then
  echo "You need docker access to run this script."
  echo "Add yourself to the docker group to run this script."
  exit 1
fi

# Allow the tag name to have prefix, used by CI
MIL_DOCKER_TAG_ROOT=${MIL_DOCKER_TAG_ROOT:-"uf-mil"}

# Quite mode so will only output if something goes wrong
DOCKER_ARGS=""

MIL_REPO="$(realpath $(dirname $BASH_SOURCE)/../)"
# Cache path in repo where dockerfiles are
DOCKER_BASE_PATH=$MIL_REPO/docker

build_mil_docker_image()
{
  docker build $DOCKER_ARGS $DOCKER_BASE_PATH/$1 -t $MIL_DOCKER_TAG_ROOT:$1 --build-arg MIL_DOCKER_TAG_ROOT=${MIL_DOCKER_TAG_ROOT}
}

# Build each of the images
build_mil_docker_image base
build_mil_docker_image dev
build_mil_docker_image ci-server

USER=$(whoami)

# If dev container has not been compiled before
if [ ! -f $HOME/.mil/dev-docker-ws/devel/setup.sh ] && [ $USER != "root" ]; then
    # Create Space to save build and devel space for dev container
    mkdir -p $HOME/.mil/dev-docker-ws
    chown $UID:1000 -R $HOME/.mil/dev-docker-ws
    mkdir -p $HOME/.mil/dev-docker-ws/build
    mkdir -p $HOME/.mil/dev-docker-ws/devel

    # Run the Dev container once and compile
    $MIL_REPO/scripts/run_development_container \
        /bin/bash -c "source /opt/ros/melodic/setup.bash; \
                      catkin_make -C /home/mil-dev/catkin_ws -j8; \
                      exit"
fi
